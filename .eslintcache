[{"/home/monalisha/Desktop/xcheck_frontend/src/reportWebVitals.js":"1","/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsContent.js":"2","/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsTitle.js":"3","/home/monalisha/Desktop/xcheck_frontend/src/config/config.js":"4","/home/monalisha/Desktop/xcheck_frontend/src/components/loader/loader.js":"5","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/addressForm.js":"6"},{"size":362,"mtime":1606113880499,"results":"7","hashOfConfig":"8"},{"size":3166,"mtime":1606817836825,"results":"9","hashOfConfig":"8"},{"size":1218,"mtime":1606817970438,"results":"10","hashOfConfig":"8"},{"size":43,"mtime":1606817462425,"results":"11","hashOfConfig":"8"},{"size":726,"mtime":1606647996681,"results":"12","hashOfConfig":"8"},{"size":9630,"mtime":1606818293318,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eeti0f",{"filePath":"16","messages":"17","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/home/monalisha/Desktop/xcheck_frontend/src/reportWebVitals.js",[],"/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsContent.js",["27","28","29","30","31"],"/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsTitle.js",[],"/home/monalisha/Desktop/xcheck_frontend/src/config/config.js",[],"/home/monalisha/Desktop/xcheck_frontend/src/components/loader/loader.js",["32","33","34"],"/home/monalisha/Desktop/xcheck_frontend/src/components/submission/addressForm.js",["35","36","37","38","39"],"import React, { Component } from \"react\";\nimport {\n    Grid,\n    TextField,\n    Button\n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Loader from \"../loader/loader\"\nimport { useHistory } from \"react-router-dom\";\nimport { port } from \"../../config/config\";\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: \"80%\",\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n}));\n\n\n\nexport default function AddressForm() {\n\n    const classes = useStyles();\n    let history = useHistory();\n\n    const [author, setAuthorChange] = React.useState('');\n    const [newsLanguage, setNewsLanguageChange] = React.useState('');\n    const [newsType, setNewsTypeChange] = React.useState('');\n    const [newsCategory, setNewsCategoryChange] = React.useState('');\n    const [newsHeadline, setNewsHeadlineChange] = React.useState('');\n    const [newsContent, setNewsContentChange] = React.useState('');\n    const [newsDescription, setNewsDescriptionChange] = React.useState('');\n    const [newsKeywords, setNewsKeywordsChange] = React.useState('');\n    const [loader, setLoader] = React.useState(false);\n\n    const handleAuthorChange = (event) => {\n        setAuthorChange(event.target.value);\n    };\n    const handleNewsLanguageChange = (event) => {\n        setNewsLanguageChange(event.target.value);\n    };\n    const handleNewsTypeChange = (event) => {\n        setNewsTypeChange(event.target.value);\n    };\n    const handleNewsCategoryChange = (event) => {\n        setNewsCategoryChange(event.target.value);\n    };\n    const handleNewsHeadlineChange = (event) => {\n        setNewsHeadlineChange(event.target.value);\n    };\n    const handleNewsContentChange = (event) => {\n        setNewsContentChange(event.target.value);\n    };\n\n    const handleNewsDescriptionChange = (event) => {\n        setNewsDescriptionChange(event.target.value);\n    };\n    const handleNewsKeywordsChange = (event) => {\n        setNewsKeywordsChange(event.target.value);\n    };\n    const handleSubmit = (event) => {\n        setLoader(true);\n        console.log(\"loader chnaged\");\n        //loader to true\n        //call to contract\n        //call to api\n        //loader to false\n        //dynamic link next page\n        const transactionId = \"mona\"\n        const post = {\n            transactionID: transactionId,\n            author: author,\n            newsLanguage: newsLanguage,\n            newsType: newsType,\n            newsCategory: newsCategory,\n            newsHeadline: newsHeadline,\n            newsContent: newsContent,\n            newsDescription: newsDescription,\n            newsKeywords: newsKeywords.split(',')\n        }\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ organisationName: author, post: post })\n        };\n        // fetch(port + \"/post/savepost\", requestOptions)\n        //     .then(res => res.json())\n        //     .then(\n        //         (result) =>console.log(\"hi\"))\n\n\n\n\n        axios.post(`${port}/post/savepost`, {\n            organisationName: author, post: post\n        })\n            .then((response) => {\n                console.log(response.data)\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n\n\n\n        history.push(`/newscontent/${transactionId}`);\n\n\n\n    };\n\n\n\n\n    return (\n\n        <div >\n\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">Author</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        value={author}\n                        onChange={handleAuthorChange}\n                        label=\"Author\"\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        <MenuItem value={\"ten\"}>Ten</MenuItem>\n                        <MenuItem value={\"twenty\"}>Twenty</MenuItem>\n                        <MenuItem value={\"thirty\"}>Thirty</MenuItem>\n                    </Select>\n                </FormControl>\n\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">News Language</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        label=\"News Language\"\n\n                        value={newsLanguage}\n                        onChange={handleNewsLanguageChange}\n                    >\n                        <MenuItem value={\"English\"}>English</MenuItem>\n                        <MenuItem value={\"Hindi\"}>Hindi</MenuItem>\n\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">News Type</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n                        label=\"News Type\"\n                        value={newsType}\n                        onChange={handleNewsTypeChange}\n                    >\n                        <MenuItem value={\"News\"}>News</MenuItem>\n                        <MenuItem value={\"Satire\"}>Satire</MenuItem>\n                        <MenuItem value={\"Sponsored\"}>Sponsored</MenuItem>\n                        <MenuItem value={\"Press Release\"}>Press Release</MenuItem>\n\n                    </Select>\n                </FormControl>\n\n                <FormControl variant=\"outlined\" className={classes.formControl}>\n                    <InputLabel id=\"demo-simple-select-outlined-label\">News Category</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-outlined-label\"\n                        id=\"demo-simple-select-outlined\"\n\n                        label=\"News Category\"\n                        value={newsCategory}\n                        onChange={handleNewsCategoryChange}\n                    >\n                        <MenuItem value={\"Politics\"}>Politics</MenuItem>\n                        <MenuItem value={\"National\"}>National</MenuItem>\n                        <MenuItem value={\"Entertainment\"}>Entertainment</MenuItem>\n                        <MenuItem value={\"Chhattisgarh\"}>Chhattisgarh</MenuItem>\n                        <MenuItem value={\"Sports\"}>Sports</MenuItem>\n                        <MenuItem value={\"Economics\"}>Economics</MenuItem>\n                    </Select>\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        label=\"News Headline\"\n                        variant=\"outlined\"\n                        value={newsHeadline}\n                        onChange={handleNewsHeadlineChange}\n                        type=\"text\"\n                        type=\"text\"\n                        multiline\n                        required\n                        rows={3}\n                        inputProps={{ maxLength: 200 }}\n\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        label=\"News Content\"\n                        variant=\"outlined\"\n                        value={newsContent}\n                        onChange={handleNewsContentChange}\n                        type=\"text\"\n                        multiline\n                        required\n                        rows={5}\n                        inputProps={{ maxLength: 500 }}\n\n\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n                    <TextField\n                        label=\"News Description\"\n                        variant=\"outlined\"\n                        value={newsDescription}\n                        onChange={handleNewsDescriptionChange}\n                        type=\"text\"\n                        multiline\n                        rows={2}\n                        inputProps={{ maxLength: 300 }}\n\n                    />\n                </FormControl>\n\n                <FormControl className={classes.formControl}>\n\n                    <TextField\n                        label=\"Keywords\"\n                        variant=\"outlined\"\n                        value={newsKeywords}\n                        onChange={handleNewsKeywordsChange}\n                        helperText=\"Comma separated keywords\"\n\n\n                    />\n                </FormControl>\n                <br />\n                <br />\n                <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleSubmit}>\n                    Submit News\n                    </Button>\n            </form>\n            {loader &&\n                <Loader\n                />}\n        </div>\n    )\n\n\n}",{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"44","line":4,"column":5,"nodeType":"42","messageId":"43","endLine":4,"endColumn":14},{"ruleId":"40","severity":1,"message":"45","line":37,"column":7,"nodeType":"42","messageId":"43","endLine":37,"endColumn":11},{"ruleId":"40","severity":1,"message":"46","line":61,"column":15,"nodeType":"42","messageId":"43","endLine":61,"endColumn":29},{"ruleId":"47","severity":1,"message":"48","line":82,"column":8,"nodeType":"49","endLine":82,"endColumn":10,"suggestions":"50"},{"ruleId":"40","severity":1,"message":"51","line":3,"column":8,"nodeType":"42","messageId":"43","endLine":3,"endColumn":21},{"ruleId":"40","severity":1,"message":"52","line":5,"column":8,"nodeType":"42","messageId":"43","endLine":5,"endColumn":25},{"ruleId":"40","severity":1,"message":"53","line":6,"column":8,"nodeType":"42","messageId":"43","endLine":6,"endColumn":19},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":26},{"ruleId":"40","severity":1,"message":"54","line":3,"column":5,"nodeType":"42","messageId":"43","endLine":3,"endColumn":9},{"ruleId":"40","severity":1,"message":"55","line":10,"column":8,"nodeType":"42","messageId":"43","endLine":10,"endColumn":22},{"ruleId":"40","severity":1,"message":"46","line":91,"column":15,"nodeType":"42","messageId":"43","endLine":91,"endColumn":29},{"ruleId":"56","severity":1,"message":"57","line":208,"column":25,"nodeType":"58","endLine":208,"endColumn":36},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'TextField' is defined but never used.","'data' is assigned a value but never used.","'requestOptions' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.transactionId'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'DialogActions' is defined but never used.","'DialogContentText' is defined but never used.","'DialogTitle' is defined but never used.","'Grid' is defined but never used.","'FormHelperText' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"60","fix":"61"},"Update the dependencies array to be: [props.match.params.transactionId]",{"range":"62","text":"63"},[2004,2006],"[props.match.params.transactionId]"]