[{"/home/monalisha/Desktop/xcheck_frontend/src/App.js":"1","/home/monalisha/Desktop/xcheck_frontend/src/reportWebVitals.js":"2","/home/monalisha/Desktop/xcheck_frontend/src/components/router.js":"3","/home/monalisha/Desktop/xcheck_frontend/src/index.js":"4","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/addressForm.js":"5","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/logo.js":"6","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/submission.js":"7","/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsDynamicContent.js":"8","/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsContent.js":"9","/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsTitle.js":"10"},{"size":528,"mtime":1606113880495,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1606113880499,"results":"13","hashOfConfig":"12"},{"size":522,"mtime":1606289904483,"results":"14","hashOfConfig":"12"},{"size":564,"mtime":1606115261421,"results":"15","hashOfConfig":"12"},{"size":7157,"mtime":1606321854308,"results":"16","hashOfConfig":"12"},{"size":549,"mtime":1606202306576,"results":"17","hashOfConfig":"12"},{"size":1509,"mtime":1606322696773,"results":"18","hashOfConfig":"12"},{"size":620,"mtime":1606323967294,"results":"19","hashOfConfig":"12"},{"size":2427,"mtime":1606323978750,"results":"20","hashOfConfig":"12"},{"size":1184,"mtime":1606324739543,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eeti0f",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/monalisha/Desktop/xcheck_frontend/src/App.js",[],"/home/monalisha/Desktop/xcheck_frontend/src/reportWebVitals.js",[],["47","48"],"/home/monalisha/Desktop/xcheck_frontend/src/components/router.js",["49"],"import React, { Component } from \"react\"\nimport { BrowserRouter as Router, Redirect, Route } from \"react-router-dom\"\nimport Submission from \"./submission/submission\"\nimport NewsContent from \"./newsContent/newsContent\"\nexport default class RouterComponent extends Component{\n\n    \n    render() {\n      \n  \n        return (\n  \n          <Router>\n          <Route exact path=\"/submission\" component={Submission} />\n          <Route exact path=\"/newscontent\" component={NewsContent} />\n          </Router>\n        )}\n  \n    \n}",["50","51"],"/home/monalisha/Desktop/xcheck_frontend/src/index.js",["52"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport RouterComponent from './components/router';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterComponent />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/addressForm.js",["53","54","55","56"],"import React, { Component } from \"react\";\nimport {\n    Grid,\n    TextField,\n    Button\n} from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: \"80%\",\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n}));\n\n\n\nexport default function AddressForm() {\n\n    const classes = useStyles();\n\n    const [author, setAuthorChange] = React.useState('');\n    const [newsLanguage, setNewsLanguageChange] = React.useState('');\n    const [newsType, setNewsTypeChange] = React.useState('');\n    const [newsCategory, setNewsCategoryChange] = React.useState('');\n    const [newsHeadline, setNewsHeadlineChange] = React.useState('');\n    const [newsContent, setNewsContentChange] = React.useState('');\n    const [newsDescription, setNewsDescriptionChange] = React.useState('');\n\n    const handleAuthorChange = (event) => {\n        setAuthorChange(event.target.value);\n    };\n    const handleNewsLanguageChange = (event) => {\n        setNewsLanguageChange(event.target.value);\n    };\n    const handleNewsTypeChange = (event) => {\n        setNewsTypeChange(event.target.value);\n    };\n    const handleNewsCategoryChange = (event) => {\n        setNewsCategoryChange(event.target.value);\n    };\n    const handleNewsHeadlineChange = (event) => {\n        setNewsHeadlineChange(event.target.value);\n    };\n    const handleNewsContentChange = (event) => {\n        setNewsContentChange(event.target.value);\n    };\n   \n     const handleNewsDescriptionChange = (event) => {\n        setNewsDescriptionChange(event.target.value);\n    };\n    const handleSubmit = (event) => {\n        console.log(\"hello\")\n     };\n\n\n\n\n    return (\n\n        <div >\n\n<form className={classes.root} noValidate autoComplete=\"off\">\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">Author</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    value={author}\n                    onChange={handleAuthorChange}\n                    label=\"Author\"\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    <MenuItem value={10}>Ten</MenuItem>\n                    <MenuItem value={20}>Twenty</MenuItem>\n                    <MenuItem value={30}>Thirty</MenuItem>\n                </Select>\n            </FormControl>\n\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">News Language</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    label=\"News Language\"\n\n                    value={newsLanguage}\n                    onChange={handleNewsLanguageChange}\n                >\n                    <MenuItem value={10}>English</MenuItem>\n                    <MenuItem value={20}>Hindi</MenuItem>\n\n                </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">News Type</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n                    label=\"News Type\"\n                    value={newsType}\n                    onChange={handleNewsTypeChange}\n                >\n                    <MenuItem value={10}>News</MenuItem>\n                    <MenuItem value={20}>Satire</MenuItem>\n                    <MenuItem value={30}>Sponsored</MenuItem>\n                    <MenuItem value={30}>Press Release</MenuItem>\n\n                </Select>\n            </FormControl>\n\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-outlined-label\">News Category</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-outlined-label\"\n                    id=\"demo-simple-select-outlined\"\n\n                    label=\"News Category\"\n                    value={newsCategory}\n                    onChange={handleNewsCategoryChange}\n                > \n                    <MenuItem value={10}>Politics</MenuItem>\n                    <MenuItem value={20}>National</MenuItem>\n                    <MenuItem value={30}>Entertainment</MenuItem>\n                    <MenuItem value={30}>Chhattisgarh</MenuItem>\n                    <MenuItem value={30}>Sports</MenuItem>\n                    <MenuItem value={30}>Economics</MenuItem>\n                </Select>\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <TextField\n                    label=\"News Headline\"\n                    variant=\"outlined\"\n                    value={newsHeadline}\n                    onChange={handleNewsHeadlineChange}\n                    type=\"text\"\n                    type=\"text\"\n                    multiline\n                    required\n                    rows={3}\n                    inputProps={{ maxLength: 200 }}\n\n                />\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <TextField\n                    label=\"News Content\"\n                    variant=\"outlined\"\n                    value={newsContent}\n                    onChange={handleNewsContentChange}\n                    type=\"text\"\n                    multiline\n                    required\n                    rows={5}\n                    inputProps={{ maxLength: 500}}\n                    \n\n                />\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n                <TextField\n                    label=\"News Description\"\n                    variant=\"outlined\"\n                    value={newsDescription}\n                    onChange={handleNewsDescriptionChange}\n                    type=\"text\"\n                    multiline\n                    rows={2}\n                    inputProps={{ maxLength: 300 }}\n\n                />\n            </FormControl>\n\n            <FormControl className={classes.formControl}>\n\n                <TextField\n                    label=\"Keywords\"\n                    variant=\"outlined\"\n                    helperText=\"Comma separated keywords\"\n\n\n                />\n            </FormControl>\n            <br />\n            <br />\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" onClick={handleSubmit}>\n                Submit News\n                    </Button>\n</form>\n        </div>\n    )\n\n\n}","/home/monalisha/Desktop/xcheck_frontend/src/components/submission/logo.js",["57","58"],"/home/monalisha/Desktop/xcheck_frontend/src/components/submission/submission.js",["59","60","61"],"/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsDynamicContent.js",["62"],"/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsContent.js",["63","64"],"/home/monalisha/Desktop/xcheck_frontend/src/components/newsContent/newsTitle.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":35,"nodeType":"71","messageId":"72","endLine":2,"endColumn":43},{"ruleId":"65","replacedBy":"73"},{"ruleId":"67","replacedBy":"74"},{"ruleId":"69","severity":1,"message":"75","line":4,"column":8,"nodeType":"71","messageId":"72","endLine":4,"endColumn":11},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"77","line":3,"column":5,"nodeType":"71","messageId":"72","endLine":3,"endColumn":9},{"ruleId":"69","severity":1,"message":"78","line":10,"column":8,"nodeType":"71","messageId":"72","endLine":10,"endColumn":22},{"ruleId":"79","severity":1,"message":"80","line":151,"column":21,"nodeType":"81","endLine":151,"endColumn":32},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"77","line":3,"column":5,"nodeType":"71","messageId":"72","endLine":3,"endColumn":9},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"82","line":4,"column":5,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},{"ruleId":"69","severity":1,"message":"83","line":5,"column":5,"nodeType":"71","messageId":"72","endLine":5,"endColumn":11},{"ruleId":"69","severity":1,"message":"83","line":7,"column":5,"nodeType":"71","messageId":"72","endLine":7,"endColumn":11},{"ruleId":"69","severity":1,"message":"76","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":26},{"ruleId":"69","severity":1,"message":"82","line":4,"column":5,"nodeType":"71","messageId":"72","endLine":4,"endColumn":14},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar",["84"],["85"],"'App' is defined but never used.","'Component' is defined but never used.","'Grid' is defined but never used.","'FormHelperText' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'TextField' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation"]